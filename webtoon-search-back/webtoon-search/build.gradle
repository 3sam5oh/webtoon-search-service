plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.samsamohoh'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// 모든 구성에 대해 spring-boot-starter-logging 모듈(logback 모듈) 제거
configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation("org.springframework.boot:spring-boot-starter-log4j2")

    // Security & JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // OpenSearch
    // https://mvnrepository.com/artifact/org.opensearch.client/spring-data-opensearch-starter
    implementation("org.opensearch.client:opensearch-rest-client:2.11.0")
    implementation("org.opensearch.client:opensearch-java:2.6.0")
    implementation("jakarta.json:jakarta.json-api")

    // Monitoring
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // Development Tools
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //Database Driver
    runtimeOnly 'org.postgresql:postgresql'
//    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test Dependencies
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Otel & Zipkin 관련
    // implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    // implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'

}

tasks.named('test') {
    useJUnitPlatform()

    // 동적 에이전트 로딩 허용
    // Java 에이전트를 동적으로 로드하는 것을 허용합니다.
    // Mockito와 같은 모킹 프레임워크는 바이트코드를 조작하기 위해 동적 에이전트를 사용합니다.
    // 미래의 Java 릴리스에서 동적 에이전트 로딩이 기본적으로 비활성화될 예정이므로
    // 이를 명시적으로 허용하여 현재와 같은 방식으로 테스트가 실행되도록 합니다.
    jvmArgs '-XX:+EnableDynamicAgentLoading'

    // 에이전트 사용 추적 (추가 정보 제공)
    // Java 에이전트 사용을 추적하여 추가 정보를 제공합니다.
    // 이는 에이전트 로딩과 관련된 문제를 진단하는 데 유용할 수 있습니다.
    // 에이전트 로딩과 관련된 경고 메시지를 더 자세히 확인할 수 있습니다.
//    jvmArgs '-Djdk.instrument.traceUsage'
}
