# 빌드 스테이지: 애플리케이션 빌드를 위한 환경 설정
FROM amazoncorretto:21-alpine-jdk AS builder
WORKDIR /app

# Gradle Wrapper 파일들을 먼저 복사
COPY . .
#COPY gradlew .
#COPY gradle gradle
RUN apk add --no-cache dos2unix && dos2unix ./gradlew

RUN chmod +x ./gradlew
RUN ls -la /app
# Gradle 빌드 파일 복사 및 의존성 다운로드
# 이 단계를 분리하여 소스 코드가 변경되어도 의존성 캐시를 재사용할 수 있게 함
COPY build.gradle settings.gradle ./
RUN ./gradlew dependencies

# 모든 소스 파일을 복사하고 애플리케이션 빌드 실행
# --no-daemon 옵션은 Gradle 데몬을 사용하지 않아 메모리 사용을 줄임
RUN ./gradlew clean build
RUN ls -la /app/build/libs/

# 런타임 스테이지: 실제 애플리케이션이 실행될 환경 설정
FROM amazoncorretto:21-alpine-jdk
WORKDIR /app

# 컨테이너 메타데이터 설정
LABEL maintainer="samsamohoh" \
      application="webtoon-search-back"

# 빌드된 JAR 파일 이름 설정 및 복사
# ${JAR_FILE}을 사용하여 빌드 시 JAR 파일 이름을 유연하게 지정할 수 있음
ARG JAR_FILE=webtoon-search-*.jar
COPY --from=builder /app/build/libs/${JAR_FILE} app.jar

# 애플리케이션이 사용할 포트 명시 (문서화 목적)
EXPOSE 8080

RUN apk add --no-cache curl

# 보안 강화: 비root 사용자 및 그룹 생성
# 애플리케이션을 비특권 사용자로 실행하여 보안 향상
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser:appgroup

# 로그 디렉토리 생성 및 권한 설정
RUN mkdir -p /home/appuser/logs && \
    chown -R appuser:appgroup /home/appuser/logs && \
    chmod -R 775 /home/appuser/logs

# 애플리케이션 실행 // ENTRYPOINT - 무조건적인 실행, CMD - 실행 시의 옵션에 따라 변경 가능
# -Djava.security.egd 옵션은 암호화 작업의 엔트로피 소스를 지정하여 시작 시간 개선
ENTRYPOINT ["java", "-Djava.security.egd=file:/dev/./urandom"]
CMD ["-jar", "/app/app.jar"]
